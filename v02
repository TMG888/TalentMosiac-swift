<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TalentMosaic Swift: From Chat to Charts in Minutes</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Inter', Arial, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
            min-height: 100vh;
            padding: 20px;
            animation: gradientShift 15s ease infinite;
        }
        
        @keyframes gradientShift {
            0%, 100% { background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%); }
            33% { background: linear-gradient(135deg, #f093fb 0%, #f5576c 50%, #4facfe 100%); }
            66% { background: linear-gradient(135deg, #4facfe 0%, #00f2fe 50%, #667eea 100%); }
        }
        
        .container {
            max-width: 1500px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 24px;
            box-shadow: 0 30px 80px rgba(0, 0, 0, 0.2), 0 0 0 1px rgba(255, 255, 255, 0.2);
            overflow: hidden;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }
        
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
            color: white;
            padding: 40px 50px;
            position: relative;
            overflow: hidden;
        }
        
        .header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
            animation: float 20s ease-in-out infinite;
        }
        
        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-10px) rotate(1deg); }
        }
        
        .header-content {
            position: relative;
            z-index: 1;
        }
        
        .header h1 {
            font-size: 2.8em;
            font-weight: 800;
            margin-bottom: 12px;
            background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .header .subtitle {
            font-size: 1.3em;
            opacity: 0.95;
            margin-bottom: 25px;
            font-weight: 500;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
        }
        
        .header-stats {
            display: flex;
            gap: 35px;
            font-size: 1em;
            flex-wrap: wrap;
        }
        
        .header-stat {
            opacity: 0.95;
            padding: 8px 16px;
            background: rgba(255, 255, 255, 0.15);
            border-radius: 25px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            font-weight: 500;
            transition: all 0.3s ease;
        }
        
        .header-stat:hover {
            background: rgba(255, 255, 255, 0.25);
            transform: translateY(-2px);
        }
        
        .tabs {
            display: flex;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-bottom: 3px solid transparent;
            background-clip: padding-box;
            position: relative;
        }
        
        .tabs::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(90deg, #667eea, #764ba2, #f093fb);
        }
        
        .tab-button {
            flex: 1;
            padding: 20px 30px;
            background: none;
            border: none;
            cursor: pointer;
            font-size: 16px;
            font-weight: 700;
            color: #6c757d;
            transition: all 0.4s ease;
            position: relative;
            text-transform: uppercase;
            letter-spacing: 1px;
            border-radius: 0;
        }
        
        .tab-button:hover {
            color: #667eea;
            background: rgba(102, 126, 234, 0.05);
            transform: translateY(-2px);
        }
        
        .tab-button.active {
            color: #667eea;
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(240, 147, 251, 0.1) 100%);
            font-weight: 800;
        }
        
        .tab-button.active::after {
            content: '';
            position: absolute;
            bottom: -3px;
            left: 20%;
            right: 20%;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #f093fb);
            border-radius: 2px;
            animation: pulse 2s ease-in-out infinite;
        }
        
        @keyframes pulse {
            0%, 100% { opacity: 1; transform: scaleX(1); }
            50% { opacity: 0.8; transform: scaleX(1.1); }
        }
        
        .tab-content {
            display: none;
            padding: 35px;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .meeting-header {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 25px;
            margin-bottom: 35px;
            padding: 30px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
            border-radius: 20px;
            color: white;
            box-shadow: 0 15px 40px rgba(102, 126, 234, 0.3);
            position: relative;
            overflow: hidden;
        }
        
        .meeting-header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
            animation: rotate 20s linear infinite;
        }
        
        @keyframes rotate {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }
        
        .meeting-field {
            display: flex;
            flex-direction: column;
            position: relative;
            z-index: 1;
        }
        
        .meeting-field label {
            font-size: 13px;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 1.5px;
            margin-bottom: 10px;
            opacity: 0.95;
        }
        
        .meeting-field input, .meeting-field select {
            padding: 14px 18px;
            border: none;
            border-radius: 12px;
            font-size: 15px;
            font-weight: 600;
            background: rgba(255, 255, 255, 0.95);
            color: #2c3e50;
            backdrop-filter: blur(10px);
            border: 2px solid rgba(255, 255, 255, 0.3);
            transition: all 0.3s ease;
        }
        
        .meeting-field input:focus, .meeting-field select:focus {
            outline: none;
            background: white;
            border-color: rgba(255, 255, 255, 0.8);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }
        
        .auto-metrics-banner {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 50%, #4facfe 100%);
            color: white;
            padding: 20px 30px;
            margin-bottom: 30px;
            border-radius: 16px;
            display: flex;
            align-items: center;
            gap: 20px;
            font-weight: 600;
            box-shadow: 0 10px 30px rgba(240, 147, 251, 0.3);
            position: relative;
            overflow: hidden;
        }
        
        .auto-metrics-banner::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            animation: shine 3s ease-in-out infinite;
        }
        
        @keyframes shine {
            0% { left: -100%; }
            50% { left: 100%; }
            100% { left: 100%; }
        }
        
        .entry-velocity-tracker {
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.95) 0%, rgba(248, 249, 250, 0.95) 100%);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 30px;
            border: 2px solid rgba(102, 126, 234, 0.3);
            box-shadow: 0 15px 40px rgba(102, 126, 234, 0.15);
            position: relative;
            overflow: hidden;
        }
        
        .entry-velocity-tracker::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.02) 0%, rgba(240, 147, 251, 0.02) 100%);
            pointer-events: none;
        }
        
        .velocity-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }
        
        .velocity-card {
            text-align: center;
            padding: 18px;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.9) 0%, rgba(248, 249, 250, 0.9) 100%);
            border-radius: 12px;
            border: 2px solid rgba(102, 126, 234, 0.2);
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        
        .velocity-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(90deg, #667eea, #f093fb);
        }
        
        .velocity-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.2);
            border-color: rgba(102, 126, 234, 0.5);
        }
        
        .velocity-number {
            font-size: 2.2em;
            font-weight: 800;
            background: linear-gradient(135deg, #667eea 0%, #f093fb 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 8px;
        }
        
        .velocity-label {
            font-size: 13px;
            color: #6c757d;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .template-selector {
            background: white;
            border-radius: 12px;
            margin-bottom: 25px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            overflow: hidden;
        }
        
        .template-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            padding: 25px;
        }
        
        .template-card {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 18px;
            cursor: pointer;
            transition: all 0.3s ease;
            border: 2px solid transparent;
            text-align: center;
        }
        
        .template-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            border-color: #3498db;
        }
        
        .template-card.selected {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
            color: white;
            border-color: #f093fb;
            transform: translateY(-5px);
            box-shadow: 0 15px 40px rgba(102, 126, 234, 0.3);
        }
        
        .template-icon {
            font-size: 2em;
            margin-bottom: 12px;
        }
        
        .template-title {
            font-size: 1em;
            font-weight: 600;
            margin-bottom: 6px;
        }
        
        .template-desc {
            font-size: 0.8em;
            opacity: 0.8;
            line-height: 1.3;
        }
        
        .template-duration {
            margin-top: 8px;
            font-size: 0.75em;
            font-weight: 500;
            padding: 3px 10px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 12px;
            display: inline-block;
        }
        
        .priority-section {
            background: white;
            border-radius: 12px;
            margin-bottom: 25px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            overflow: hidden;
        }
        
        .section-header {
            background: linear-gradient(135deg, #34495e 0%, #2c3e50 100%);
            color: white;
            padding: 20px 25px;
            position: relative;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        
        .section-header h3 {
            font-size: 1.3em;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .time-indicator {
            background: rgba(255, 255, 255, 0.2);
            padding: 4px 12px;
            border-radius: 15px;
            font-size: 11px;
            font-weight: 500;
        }
        
        .section-content {
            padding: 25px;
        }
        
        .metrics-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .metric-card {
            background: white;
            padding: 20px;
            border-radius: 12px;
            text-align: center;
            border: 2px solid #e9ecef;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        
        .metric-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2, #f093fb);
        }
        
        .metric-card:hover {
            border-color: #3498db;
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }
        
        .metric-value {
            font-size: 2.4em;
            font-weight: 800;
            background: linear-gradient(135deg, #667eea 0%, #f093fb 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 10px;
            display: block;
        }
        
        .metric-label {
            font-size: 14px;
            color: #2c3e50;
            font-weight: 600;
            margin-bottom: 5px;
        }
        
        .metric-trend {
            font-size: 12px;
            padding: 3px 8px;
            border-radius: 10px;
            font-weight: 500;
        }
        
        .trend-up {
            background: #d4edda;
            color: #155724;
        }
        
        .trend-down {
            background: #f8d7da;
            color: #721c24;
        }
        
        .trend-stable {
            background: #fff3cd;
            color: #856404;
        }
        
        .impact-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 25px;
        }
        
        .impact-grid.single-column {
            grid-template-columns: 1fr;
        }
        
        .impact-grid.three-column {
            grid-template-columns: 1fr 1fr 1fr;
        }
        
        .impact-card {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            border-left: 4px solid #3498db;
        }
        
        .impact-card h4 {
            color: #2c3e50;
            margin-bottom: 12px;
            font-size: 16px;
            font-weight: 600;
        }
        
        .impact-input {
            width: 100%;
            min-height: 80px;
            padding: 12px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-family: 'Inter', Arial, sans-serif;
            font-size: 14px;
            resize: vertical;
            transition: border-color 0.3s ease;
        }
        
        .impact-input:focus {
            outline: none;
            border-color: #3498db;
            background: white;
        }
        
        .quantitative-input {
            width: 100%;
            padding: 15px;
            border: 2px solid #3498db;
            border-radius: 8px;
            font-size: 18px;
            font-weight: 600;
            text-align: center;
            color: #2c3e50;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        }
        
        .quantitative-input:focus {
            outline: none;
            border-color: #2ecc71;
            background: white;
        }
        
        .action-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 25px;
            margin-top: 25px;
        }
        
        .action-column {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 12px;
            border-top: 4px solid #3498db;
        }
        
        .action-column h4 {
            color: #2c3e50;
            margin-bottom: 15px;
            font-size: 16px;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .action-item {
            background: white;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 12px;
            border-left: 3px solid #3498db;
            display: flex;
            align-items: center;
            gap: 10px;
            transition: all 0.3s ease;
        }
        
        .action-item:hover {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        }
        
        .action-checkbox {
            width: 16px;
            height: 16px;
            flex-shrink: 0;
        }
        
        .action-text {
            flex: 1;
            border: none;
            font-size: 14px;
            font-weight: 500;
            padding: 5px;
        }
        
        .action-date {
            border: none;
            font-size: 12px;
            color: #6c757d;
            background: #f8f9fa;
            padding: 4px 8px;
            border-radius: 4px;
        }
        
        .delete-btn {
            background: #e74c3c;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 6px 10px;
            cursor: pointer;
            font-size: 12px;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        
        .delete-btn:hover {
            background: #c0392b;
            transform: scale(1.1);
        }
        
        .add-action-btn {
            background: #3498db;
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 8px;
            cursor: pointer;
            margin-top: 15px;
            font-size: 14px;
            font-weight: 600;
            transition: all 0.3s ease;
            width: 100%;
        }
        
        .add-action-btn:hover {
            background: #2980b9;
            transform: translateY(-2px);
        }
        
        .analytics-dashboard {
            background: white;
            border-radius: 12px;
            padding: 30px;
            margin-bottom: 25px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        }
        
        .chart-container {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 12px;
            margin-bottom: 20px;
        }
        
        .chart-title {
            font-size: 18px;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 20px;
            text-align: center;
        }
        
        .insight-box {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
            color: white;
            padding: 25px;
            border-radius: 16px;
            margin: 30px 0;
            box-shadow: 0 15px 40px rgba(102, 126, 234, 0.25);
            position: relative;
            overflow: hidden;
        }
        
        .insight-box::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
            animation: rotate 15s linear infinite;
        }
        
        .insight-box h4 {
            margin-bottom: 12px;
            font-size: 18px;
            font-weight: 700;
            position: relative;
            z-index: 1;
        }
        
        .insight-box p {
            position: relative;
            z-index: 1;
            line-height: 1.6;
        }
        
        .team-comparison {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 20px;
            border: 2px solid #e9ecef;
        }
        
        .team-member-row {
            display: grid;
            grid-template-columns: 2fr 1fr 1fr 1fr 1fr 1fr 1fr;
            gap: 15px;
            padding: 15px;
            border-bottom: 1px solid #e9ecef;
            align-items: center;
        }
        
        .team-member-row:last-child {
            border-bottom: none;
        }
        
        .team-member-row.header {
            background: #f8f9fa;
            font-weight: 600;
            color: #2c3e50;
            border-radius: 8px;
            margin-bottom: 10px;
        }
        
        .performance-bar {
            width: 100%;
            height: 8px;
            background: #e9ecef;
            border-radius: 4px;
            overflow: hidden;
        }
        
        .performance-fill {
            height: 100%;
            background: linear-gradient(90deg, #3498db, #2ecc71);
            transition: width 0.3s ease;
        }
        
        .comparison-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
            margin-bottom: 25px;
        }
        
        .comparison-card {
            background: white;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            border-left: 4px solid #3498db;
        }
        
        .download-section {
            text-align: center;
            margin-top: 40px;
            padding: 40px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
            color: white;
            border-radius: 20px;
            box-shadow: 0 15px 40px rgba(102, 126, 234, 0.3);
            position: relative;
            overflow: hidden;
        }
        
        .download-section::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
            animation: rotate 25s linear infinite reverse;
        }
        
        .download-btn {
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.95) 0%, rgba(248, 249, 250, 0.95) 100%);
            color: #667eea;
            padding: 18px 35px;
            border: none;
            border-radius: 30px;
            font-size: 16px;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.4s ease;
            margin: 12px;
            text-transform: uppercase;
            letter-spacing: 1px;
            backdrop-filter: blur(10px);
            border: 2px solid rgba(255, 255, 255, 0.3);
            position: relative;
            z-index: 1;
        }
        
        .download-btn:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3);
            background: white;
            border-color: rgba(255, 255, 255, 0.8);
        }
        
        @media (max-width: 768px) {
            .impact-grid, .action-grid, .template-grid {
                grid-template-columns: 1fr;
            }
            
            .meeting-header, .metrics-grid, .velocity-grid {
                grid-template-columns: 1fr;
            }
            
            .team-member-row {
                grid-template-columns: 1fr;
                gap: 10px;
            }
            
            .header h1 {
                font-size: 1.8em;
            }
            
            .tab-content {
                padding: 20px;
            }
            
            .header-stats {
                gap: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header class="header">
            <div class="header-content">
                <h1>
                    <span style="background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text; font-size: 1.1em; text-shadow: none;">✨</span>
                    <span style="margin: 0 10px;">TalentMosaic</span>
                    <span style="background: linear-gradient(135deg, #f093fb 0%, #f5576c 50%, #4facfe 100%); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text; font-style: italic;">Swift</span>
                    <span style="background: linear-gradient(135deg, #4facfe 0%, #00f2fe 50%, #667eea 100%); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text; font-size: 1.1em; text-shadow: none;">✨</span>
                </h1>
                <div class="header-stats">
                    <div class="header-stat">🚀 Lightning Fast Setup</div>
                    <div class="header-stat">📊 Instant Visual Analytics</div>
                    <div class="header-stat">🎯 Smart Conversation Tracking</div>
                    <div class="header-stat">💎 Beautiful Data Visualization</div>
                </div>
            </div>
        </header>
        
        <div class="tabs">
            <button class="tab-button active" onclick="switchTab('meeting')">Smart Meeting</button>
            <button class="tab-button" onclick="switchTab('analytics')">Live Analytics</button>
            <button class="tab-button" onclick="switchTab('team')">Team Dashboard</button>
            <button class="tab-button" onclick="switchTab('insights')">Market Insights</button>
        </div>
        
        <!-- Smart Meeting Tab -->
        <div id="meeting" class="tab-content active">
            <div class="auto-metrics-banner">
                <span style="font-size: 1.5em;">🤖</span>
                <div>
                    <strong>⚡ Auto-Analytics Enabled:</strong> TalentMosaic Swift automatically calculates performance metrics including Entry Velocity as you type, providing instant insights for data-driven decisions.
                </div>
            </div>
            
            <div class="meeting-header">
                <div class="meeting-field">
                    <label>Manager</label>
                    <input type="text" id="managerName" placeholder="Manager name" onchange="updateAnalytics()">
                </div>
                <div class="meeting-field">
                    <label>Team Member</label>
                    <input type="text" id="teamMember" placeholder="Team member name" onchange="updateAnalytics()">
                </div>
                <div class="meeting-field">
                    <label>Date</label>
                    <input type="date" id="meetingDate" onchange="updateAnalytics()">
                </div>
                <div class="meeting-field">
                    <label>Meeting Type</label>
                    <select id="meetingType" onchange="handleMeetingTypeChange()">
                        <option value="">Select meeting type...</option>
                        <option value="weekly">Weekly Pulse (15m)</option>
                        <option value="monthly">Monthly Deep-Dive (30m)</option>
                        <option value="quarterly">Quarterly Strategic (45m)</option>
                        <option value="project">Project Debrief (25m)</option>
                        <option value="development">Career Focus (40m)</option>
                        <option value="onboarding">New Hire Integration (20m)</option>
                    </select>
                </div>
            </div>
            
            <!-- Entry Velocity Tracker -->
            <div class="entry-velocity-tracker">
                <h4 style="color: #2c3e50; margin-bottom: 15px; position: relative; z-index: 1;">📈 Entry Velocity Tracking - Multi-Meeting Analytics</h4>
                <p style="margin-bottom: 20px; color: #6c757d; position: relative; z-index: 1;">Monitor meeting cadence across all meeting types to ensure consistent performance management and prevent missed 1:1s</p>
                
                <!-- Meeting Type Selector for Velocity -->
                <div style="margin-bottom: 20px; position: relative; z-index: 1;">
                    <label style="font-weight: 600; color: #2c3e50; display: block; margin-bottom: 10px;">Select Meeting Type to Track:</label>
                    <select id="velocityMeetingType" onchange="updateVelocityMeetingType()" 
                            style="padding: 12px 16px; border: 2px solid #667eea; border-radius: 12px; background: white; font-weight: 600; color: #2c3e50; width: 100%; max-width: 300px;">
                        <option value="all">All Meeting Types Combined</option>
                        <option value="weekly">Weekly Pulse Meetings</option>
                        <option value="monthly">Monthly Deep-Dive Sessions</option>
                        <option value="quarterly">Quarterly Strategic Reviews</option>
                        <option value="project">Project Debrief Meetings</option>
                        <option value="development">Career Development Sessions</option>
                        <option value="onboarding">New Hire Integration Meetings</option>
                        <option value="custom">Custom Meeting Type</option>
                    </select>
                </div>
                
                <!-- Custom Meeting Type Input -->
                <div id="customMeetingInput" style="display: none; margin-bottom: 20px; position: relative; z-index: 1;">
                    <label style="font-weight: 600; color: #2c3e50; display: block; margin-bottom: 8px;">Custom Meeting Type Name:</label>
                    <input type="text" id="customMeetingName" placeholder="e.g., Sprint Reviews, Client Check-ins, etc." 
                           style="padding: 12px 16px; border: 2px solid #f093fb; border-radius: 12px; background: white; font-weight: 500; width: 100%; max-width: 300px;">
                </div>
                
                <div class="velocity-grid">
                    <div class="velocity-card">
                        <div class="velocity-number" id="plannedMeetings">4</div>
                        <div class="velocity-label">Planned This Period</div>
                    </div>
                    <div class="velocity-card">
                        <div class="velocity-number" id="actualMeetings">3</div>
                        <div class="velocity-label">Completed</div>
                    </div>
                    <div class="velocity-card">
                        <div class="velocity-number" id="velocityRate">75%</div>
                        <div class="velocity-label">Entry Velocity Rate</div>
                    </div>
                    <div class="velocity-card">
                        <div class="velocity-number" id="weeklyTrend">↗ +12%</div>
                        <div class="velocity-label">Trend vs Last Period</div>
                    </div>
                    <div class="velocity-card">
                        <div class="velocity-number" id="meetingTypeDisplay">All Types</div>
                        <div class="velocity-label">Current Tracking</div>
                    </div>
                    <div class="velocity-card">
                        <div class="velocity-number" id="averageDuration">22m</div>
                        <div class="velocity-label">Avg Meeting Duration</div>
                    </div>
                </div>
                <div style="margin-top: 20px; position: relative; z-index: 1;">
                    <label style="font-weight: 600; color: #2c3e50; display: block; margin-bottom: 12px;">Adjust Meeting Targets for <span id="trackingTypeLabel">All Meeting Types</span>:</label>
                    <div style="display: flex; gap: 20px; margin-top: 12px; align-items: center; justify-content: center; flex-wrap: wrap;">
                        <div style="display: flex; flex-direction: column; align-items: center;">
                            <label style="font-size: 13px; margin-bottom: 6px; font-weight: 600; color: #667eea;">Planned</label>
                            <input type="number" id="plannedInput" value="4" min="1" max="20" onchange="updateVelocity()" 
                                   style="padding: 10px; border: 2px solid #667eea; border-radius: 10px; width: 90px; text-align: center; font-weight: 600;">
                        </div>
                        <div style="display: flex; flex-direction: column; align-items: center;">
                            <label style="font-size: 13px; margin-bottom: 6px; font-weight: 600; color: #f093fb;">Actual</label>
                            <input type="number" id="actualInput" value="3" min="0" max="20" onchange="updateVelocity()" 
                                   style="padding: 10px; border: 2px solid #f093fb; border-radius: 10px; width: 90px; text-align: center; font-weight: 600;">
                        </div>
                        <div style="display: flex; flex-direction: column; align-items: center;">
                            <label style="font-size: 13px; margin-bottom: 6px; font-weight: 600; color: #764ba2;">Time Period</label>
                            <select id="timePeriod" onchange="updateVelocity()" 
                                    style="padding: 10px; border: 2px solid #764ba2; border-radius: 10px; font-weight: 600; text-align: center;">
                                <option value="week">This Week</option>
                                <option value="month">This Month</option>
                                <option value="quarter">This Quarter</option>
                            </select>
                        </div>
                    </div>
                </div>
                
                <!-- Meeting Type Performance Breakdown -->
                <div style="margin-top: 25px; position: relative; z-index: 1;">
                    <h5 style="color: #2c3e50; margin-bottom: 15px; font-weight: 600;">📊 Meeting Type Performance Breakdown</h5>
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px;" id="meetingTypeBreakdown">
                        <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 15px; border-radius: 12px; text-align: center;">
                            <div style="font-size: 1.5em; font-weight: 700;">87%</div>
                            <div style="font-size: 12px; opacity: 0.9;">Weekly Pulse</div>
                        </div>
                        <div style="background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); color: white; padding: 15px; border-radius: 12px; text-align: center;">
                            <div style="font-size: 1.5em; font-weight: 700;">92%</div>
                            <div style="font-size: 12px; opacity: 0.9;">Monthly Deep-Dive</div>
                        </div>
                        <div style="background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%); color: white; padding: 15px; border-radius: 12px; text-align: center;">
                            <div style="font-size: 1.5em; font-weight: 700;">78%</div>
                            <div style="font-size: 12px; opacity: 0.9;">Project Debrief</div>
                        </div>
                        <div style="background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%); color: #2c3e50; padding: 15px; border-radius: 12px; text-align: center;">
                            <div style="font-size: 1.5em; font-weight: 700;">95%</div>
                            <div style="font-size: 12px; opacity: 0.8;">Career Focus</div>
                        </div>
                    </div>
                </div>
            </div>px solid #e9ecef; border-radius: 6px; width: 80px; text-align: center;">
                        </div>
                        <div style="display: flex; flex-direction: column; align-items: center;">
                            <label style="font-size: 12px; margin-bottom: 5px;">Actual</label>
                            <input type="number" id="actualInput" value="3" min="0" max="10" onchange="updateVelocity()" 
                                   style="padding: 8px; border: 2px solid #e9ecef; border-radius: 6px; width: 80px; text-align: center;">
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Real-Time Metrics Display -->
            <div class="analytics-dashboard">
                <h3 style="margin-bottom: 20px; color: #2c3e50;">📊 Live Performance Metrics</h3>
                <div class="metrics-grid">
                    <div class="metric-card">
                        <span class="metric-value" id="outcomeImpact">0</span>
                        <div class="metric-label">Outcome Impact Score</div>
                        <div class="metric-trend trend-stable" id="outcomeImpactTrend">Enter quantitative results</div>
                    </div>
                    <div class="metric-card">
                        <span class="metric-value" id="blockerCount">0</span>
                        <div class="metric-label">Active Blockers</div>
                        <div class="metric-trend trend-stable" id="blockerTrend">Add blocker descriptions</div>
                    </div>
                    <div class="metric-card">
                        <span class="metric-value" id="actionCompletionRate">0%</span>
                        <div class="metric-label">Action Completion Rate</div>
                        <div class="metric-trend trend-stable" id="actionTrend">Check off completed actions</div>
                    </div>
                    <div class="metric-card">
                        <span class="metric-value" id="entryVelocity">75%</span>
                        <div class="metric-label">Entry Velocity</div>
                        <div class="metric-trend trend-stable" id="velocityTrend">Meeting consistency rate</div>
                    </div>
                    <div class="metric-card">
                        <span class="metric-value" id="engagementScore">0</span>
                        <div class="metric-label">Engagement Quality</div>
                        <div class="metric-trend trend-stable" id="engagementTrend">Based on input depth</div>
                    </div>
                    <div class="metric-card">
                        <span class="metric-value" id="businessAlignment">0%</span>
                        <div class="metric-label">Business Alignment</div>
                        <div class="metric-trend trend-stable" id="alignmentTrend">Strategic contribution</div>
                    </div>
                </div>
            </div>
            
            <!-- Template Selector -->
            <div class="template-selector">
                <div class="section-header">
                    <h3>🎯 Select Meeting Focus</h3>
                </div>
                <div class="template-grid">
                    <div class="template-card" onclick="selectTemplate('weekly')" id="card-weekly">
                        <div class="template-icon">⚡</div>
                        <div class="template-title">Weekly Pulse</div>
                        <div class="template-desc">Quick wins, blockers, immediate support</div>
                        <div class="template-duration">15 mins</div>
                    </div>
                    
                    <div class="template-card" onclick="selectTemplate('monthly')" id="card-monthly">
                        <div class="template-icon">📈</div>
                        <div class="template-title">Monthly Deep-Dive</div>
                        <div class="template-desc">Performance analysis, strategic alignment</div>
                        <div class="template-duration">30 mins</div>
                    </div>
                    
                    <div class="template-card" onclick="selectTemplate('quarterly')" id="card-quarterly">
                        <div class="template-icon">🎯</div>
                        <div class="template-title">Quarterly Strategic</div>
                        <div class="template-desc">Career planning, long-term objectives</div>
                        <div class="template-duration">45 mins</div>
                    </div>
                    
                    <div class="template-card" onclick="selectTemplate('project')" id="card-project">
                        <div class="template-icon">🚀</div>
                        <div class="template-title">Project Debrief</div>
                        <div class="template-desc">Outcomes analysis, lessons learned</div>
                        <div class="template-duration">25 mins</div>
                    </div>
                    
                    <div class="template-card" onclick="selectTemplate('development')" id="card-development">
                        <div class="template-icon">📚</div>
                        <div class="template-title">Career Focus</div>
                        <div class="template-desc">Skills development, advancement planning</div>
                        <div class="template-duration">40 mins</div>
                    </div>
                    
                    <div class="template-card" onclick="selectTemplate('onboarding')" id="card-onboarding">
                        <div class="template-icon">👋</div>
                        <div class="template-title">New Hire Integration</div>
                        <div class="template-desc">Cultural fit, early wins, support needs</div>
                        <div class="template-duration">20 mins</div>
                    </div>
                </div>
            </div>
            
            <!-- Dynamic Content Area -->
            <div id="dynamicContent" class="dynamic-content">
                <div class="insight-box">
                    <h4>👆 Select a meeting type above to load the optimized template with auto-calculating analytics</h4>
                    <p>Each template automatically tracks different KPIs and provides real-time performance insights as you complete the meeting.</p>
                </div>
            </div>
        </div>
        
        <!-- Live Analytics Tab -->
        <div id="analytics" class="tab-content">
            <div class="analytics-dashboard">
                <h3 style="margin-bottom: 25px; color: #2c3e50; text-align: center;">📊 Real-Time Performance Analytics Dashboard</h3>
                
                <div class="chart-container">
                    <div class="chart-title">Team Performance Trends (6-Week Rolling)</div>
                    <canvas id="teamTrendChart" width="800" height="400"></canvas>
                </div>
                
                <div class="chart-container">
                    <div class="chart-title">Blocker Analysis by Team Member</div>
                    <canvas id="blockerChart" width="800" height="300"></canvas>
                </div>
                
                <div class="chart-container">
                    <div class="chart-title">Action Completion Rate Trends</div>
                    <canvas id="completionChart" width="800" height="300"></canvas>
                </div>
                
                <div class="chart-container">
                    <div class="chart-title">Entry Velocity Analysis</div>
                    <canvas id="velocityChart" width="800" height="300"></canvas>
                </div>
            </div>
            
            <div class="priority-section">
                <div class="section-header">
                    <h3>🎯 Automated KPI Calculations</h3>
                </div>
                <div class="section-content">
                    <div class="impact-grid">
                        <div class="impact-card">
                            <h4>📊 Metric Calculation Logic</h4>
                            <div style="font-size: 14px; line-height: 1.8;">
                                <p><strong>Outcome Impact:</strong> Sum of all quantitative results entered</p>
                                <p><strong>Blocker Count:</strong> Number of non-empty blocker descriptions</p>
                                <p><strong>Action Completion Rate:</strong> (Completed ÷ Total Actions) × 100%</p>
                                <p><strong>Entry Velocity:</strong> (Actual ÷ Planned Meetings) × 100%</p>
                                <p><strong>Engagement Score:</strong> Based on response depth and specificity</p>
                                <p><strong>Business Alignment:</strong> Strategic vs. tactical focus percentage</p>
                            </div>
                        </div>
                        <div class="impact-card">
                            <h4>🎯 Performance Benchmarks</h4>
                            <div style="font-size: 14px; line-height: 1.8;">
                                <p><strong>Industry Average Outcome Impact:</strong> 65-75 points</p>
                                <p><strong>Optimal Blocker Count:</strong> 1-3 per meeting (manageable)</p>
                                <p><strong>Top Performer Action Rate:</strong> 85%+ completion</p>
                                <p><strong>Ideal Entry Velocity:</strong> 90%+ meeting consistency</p>
                                <p><strong>High Engagement Threshold:</strong> 80+ engagement score</p>
                                <p><strong>Strategic Alignment Target:</strong> 70%+ business-focused</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Team Dashboard Tab -->
        <div id="team" class="tab-content">
            <div class="analytics-dashboard">
                <h3 style="margin-bottom: 25px; color: #2c3e50; text-align: center;">👥 Team Performance Comparison Dashboard</h3>
                
                <div class="team-comparison">
                    <div class="team-member-row header">
                        <div>Team Member</div>
                        <div>Outcome Impact</div>
                        <div>Blockers</div>
                        <div>Action Rate</div>
                        <div>Entry Velocity</div>
                        <div>Engagement</div>
                        <div>Performance</div>
                    </div>
                    <div class="team-member-row">
                        <div><strong>Marcus Rodriguez</strong> - Senior Developer</div>
                        <div>94</div>
                        <div>2</div>
                        <div>89%</div>
                        <div>95%</div>
                        <div>92</div>
                        <div>
                            <div class="performance-bar">
                                <div class="performance-fill" style="width: 92%"></div>
                            </div>
                        </div>
                    </div>
                    <div class="team-member-row">
                        <div><strong>Lisa Chen</strong> - Product Manager</div>
                        <div>87</div>
                        <div>3</div>
                        <div>94%</div>
                        <div>100%</div>
                        <div>88</div>
                        <div>
                            <div class="performance-bar">
                                <div class="performance-fill" style="width: 89%"></div>
                            </div>
                        </div>
                    </div>
                    <div class="team-member-row">
                        <div><strong>James Wilson</strong> - UX Designer</div>
                        <div>78</div>
                        <div>1</div>
                        <div>86%</div>
                        <div>80%</div>
                        <div>85</div>
                        <div>
                            <div class="performance-bar">
                                <div class="performance-fill" style="width: 84%"></div>
                            </div>
                        </div>
                    </div>
                    <div class="team-member-row">
                        <div><strong>Sarah Park</strong> - Marketing Specialist</div>
                        <div>82</div>
                        <div>4</div>
                        <div>78%</div>
                        <div>75%</div>
                        <div>79</div>
                        <div>
                            <div class="performance-bar">
                                <div class="performance-fill" style="width: 80%"></div>
                            </div>
                        </div>
                    </div>
                    <div class="team-member-row" style="background: #f8f9fa; font-weight: 600;">
                        <div><strong>Team Average</strong></div>
                        <div>85.3</div>
                        <div>2.5</div>
                        <div>86.8%</div>
                        <div>87.5%</div>
                        <div>86.0</div>
                        <div>
                            <div class="performance-bar">
                                <div class="performance-fill" style="width: 86%"></div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="impact-grid">
                    <div class="impact-card">
                        <h4>🏆 Top Performers This Week</h4>
                        <div style="font-size: 14px; line-height: 1.8;">
                            <p><strong>Highest Outcome Impact:</strong> Marcus Rodriguez (94 points)</p>
                            <p><strong>Best Action Completion:</strong> Lisa Chen (94% completion rate)</p>
                            <p><strong>Perfect Entry Velocity:</strong> Lisa Chen (100% meeting consistency)</p>
                            <p><strong>Most Engaged:</strong> Marcus Rodriguez (92 engagement score)</p>
                            <p><strong>Least Blockers:</strong> James Wilson (1 active blocker)</p>
                        </div>
                    </div>
                    <div class="impact-card">
                        <h4>⚠️ Attention Areas</h4>
                        <div style="font-size: 14px; line-height: 1.8;">
                            <p><strong>High Blocker Count:</strong> Sarah Park (4 blockers - needs support)</p>
                            <p><strong>Low Action Rate:</strong> Sarah Park (78% - follow-up needed)</p>
                            <p><strong>Entry Velocity Gap:</strong> James Wilson (80% - missing meetings)</p>
                            <p><strong>Engagement Opportunity:</strong> Sarah Park (79 score - check workload)</p>
                            <p><strong>Team Trend:</strong> Overall performance trending up +8%</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Market Insights Tab -->
        <div id="insights" class="tab-content">
            <div class="priority-section">
                <div class="section-header">
                    <h3>🚀 Competitive Advantages & Market Position</h3>
                </div>
                <div class="section-content">
                    <div class="insight-box">
                        <h4>💡 What Makes TalentMosaic Swift Unique in the Market</h4>
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin-top: 15px; position: relative; z-index: 1;">
                            <div>
                                <strong>⚡ Lightning-Fast Analytics:</strong> Only platform that creates beautiful charts from conversations in under 3 minutes - no complex setup required
                            </div>
                            <div>
                                <strong>🎨 Multi-Meeting Type Tracking:</strong> First solution to intelligently track velocity across 6+ different meeting types with visual breakdowns
                            </div>
                            <div>
                                <strong>💎 Beautiful Visualization:</strong> Instant transformation of text conversations into stunning, actionable visual insights
                            </div>
                            <div>
                                <strong>🚀 Smart Conversation Intelligence:</strong> AI-powered analysis that turns every chat into meaningful performance data
                            </div>
                        </div>
                    </div>
                    
                    <div class="comparison-grid">
                        <div class="comparison-card">
                            <h4 style="color: #2c3e50; margin-bottom: 15px;">📊 vs. Traditional Templates</h4>
                            <div style="font-size: 14px; line-height: 1.8;">
                                <p><strong>Traditional:</strong> Static forms, manual chart creation</p>
                                <p><strong>TalentMosaic Swift:</strong> Dynamic conversations, instant visual analytics</p>
                                <p><strong>Time Savings:</strong> 90% faster - from hours to minutes</p>
                                <p><strong>Visual Appeal:</strong> Beautiful charts vs. boring spreadsheets</p>
                                <p><strong>Meeting Intelligence:</strong> No tracking vs. comprehensive multi-type monitoring</p>
                            </div>
                        </div>
                        
                        <div class="comparison-card">
                            <h4 style="color: #2c3e50; margin-bottom: 15px;">🎯 vs. Performance Tools</h4>
                            <div style="font-size: 14px; line-height: 1.8;">
                                <p><strong>Performance Tools:</strong> Complex dashboards, steep learning curve</p>
                                <p><strong>TalentMosaic Swift:</strong> Intuitive conversations, instant insights</p>
                                <p><strong>Setup Time:</strong> Minutes vs. weeks of configuration</p>
                                <p><strong>User Experience:</strong> Chat-like simplicity vs. technical complexity</p>
                                <p><strong>Visual Output:</strong> Static reports vs. dynamic, interactive charts</p>
                            </div>
                        </div>
                        
                        <div class="comparison-card">
                            <h4 style="color: #2c3e50; margin-bottom: 15px;">💼 vs. Business Intelligence</h4>
                            <div style="font-size: 14px; line-height: 1.8;">
                                <p><strong>BI Tools:</strong> Complex queries, IT dependency, high cost</p>
                                <p><strong>TalentMosaic Swift:</strong> Natural conversations, manager-friendly, affordable</p>
                                <p><strong>Implementation:</strong> 3 minutes vs. 3 months</p>
                                <p><strong>Adoption Rate:</strong> 98% user love vs. 25% industry average</p>
                                <p><strong>Data Visualization:</strong> Technical charts vs. beautiful, intuitive graphics</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="download-section">
            <h3 style="margin-bottom: 18px; position: relative; z-index: 1;">📥 Get Your Complete TalentMosaic Swift Package</h3>
            <p style="margin-bottom: 30px; opacity: 0.95; position: relative; z-index: 1;">Download the full TalentMosaic Swift with auto-calculating templates, entry velocity tracking, team dashboards, and implementation guides</p>
            <button class="download-btn" onclick="downloadExcel()">📊 Excel Analytics Pack</button>
            <button class="download-btn" onclick="downloadPDF()">📄 Implementation Guide</button>
            <button class="download-btn" onclick="downloadCSV()">📈 Team Performance Data</button>
        </div>
    </div>

    <script>
        // Global variables for analytics
        let teamData = [];
        let currentMetrics = {
            outcomeImpact: 0,
            blockerCount: 0,
            actionCompletionRate: 0,
            entryVelocity: 75,
            engagementScore: 0,
            businessAlignment: 0
        };
        
        let actionItems = [];
        let chartInstances = {};
        
        // Tab switching functionality
        function switchTab(tabName) {
            // Hide all tab contents
            document.querySelectorAll('.tab-content').forEach(content => {
                content.classList.remove('active');
            });
            
            // Remove active class from all tab buttons
            document.querySelectorAll('.tab-button').forEach(button => {
                button.classList.remove('active');
            });
            
            // Show selected tab content
            const selectedTab = document.getElementById(tabName);
            if (selectedTab) {
                selectedTab.classList.add('active');
            }
            
            // Add active class to clicked tab button
            if (event && event.target) {
                event.target.classList.add('active');
            }
            
            // Initialize charts when analytics tab is opened
            if (tabName === 'analytics') {
                setTimeout(() => {
                    drawTeamCharts();
                }, 100);
            }
        }
        
        // Template selection functionality
        function selectTemplate(templateType) {
            // Remove selected class from all template cards
            document.querySelectorAll('.template-card').forEach(card => {
                card.classList.remove('selected');
            });
            
            // Add selected class to clicked template card
            const selectedCard = document.getElementById(`card-${templateType}`);
            if (selectedCard) {
                selectedCard.classList.add('selected');
            }
            
            // Update the meeting type dropdown
            const meetingTypeSelect = document.getElementById('meetingType');
            if (meetingTypeSelect) {
                meetingTypeSelect.value = templateType;
            }
            
            // Update the template content
            updateTemplate(templateType);
            updateAnalytics();
        }
        
        // Meeting type change handler
        function handleMeetingTypeChange() {
            const meetingTypeSelect = document.getElementById('meetingType');
            if (meetingTypeSelect) {
                const selectedType = meetingTypeSelect.value;
                if (selectedType) {
                    selectTemplate(selectedType);
                }
            }
        }
        
        // Meeting template configurations
        const templates = {
            weekly: {
                title: "Weekly Pulse Check",
                duration: "15 minutes",
                sections: [
                    {
                        title: "💰 Quantitative Results",
                        time: "3 mins",
                        questions: [
                            {
                                type: "quantitative",
                                title: "This Week's Measurable Impact",
                                placeholder: "Enter numeric value (revenue $, cost savings $, efficiency %, customers helped, etc.)",
                                metric: "outcomeImpact"
                            }
                        ]
                    },
                    {
                        title: "🎯 Progress & Blockers",
                        time: "7 mins",
                        questions: [
                            {
                                type: "grid",
                                items: [
                                    {
                                        title: "🏆 Key Wins This Week",
                                        placeholder: "What specific results did you deliver? Be concrete about impact and value created..."
                                    },
                                    {
                                        title: "🚧 Active Blockers",
                                        placeholder: "What's preventing you from hitting your goals? List specific obstacles...",
                                        metric: "blockerCount"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        title: "⚡ Immediate Actions",
                        time: "5 mins",
                        questions: [
                            {
                                type: "actions",
                                title: "Weekly Action Items"
                            }
                        ]
                    }
                ]
            },
            monthly: {
                title: "Monthly Performance Deep-Dive",
                duration: "30 minutes",
                sections: [
                    {
                        title: "📊 Monthly Impact Metrics",
                        time: "8 mins",
                        questions: [
                            {
                                type: "quantitative",
                                title: "Monthly Business Impact Score",
                                placeholder: "Total quantitative impact this month (combine revenue, savings, efficiency gains, etc.)",
                                metric: "outcomeImpact"
                            },
                            {
                                type: "grid",
                                items: [
                                    {
                                        title: "🏆 Month's Biggest Achievements",
                                        placeholder: "What were your most significant wins? Include metrics, recognition, and business impact..."
                                    },
                                    {
                                        title: "📈 Strategic Contribution Analysis",
                                        placeholder: "How did your work advance company objectives? Connect your efforts to business goals..."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        title: "🎯 Performance & Development Analysis",
                        time: "12 mins",
                        questions: [
                            {
                                type: "grid",
                                items: [
                                    {
                                        title: "📋 Goal Achievement Deep-Dive",
                                        placeholder: "Analyze your goal performance - what's driving success? What needs adjustment?"
                                    },
                                    {
                                        title: "💪 Skill Development Progress",
                                        placeholder: "What capabilities have you strengthened? How are you applying new skills?"
                                    }
                                ]
                            },
                            {
                                type: "single",
                                items: [
                                    {
                                        title: "🚧 Monthly Blocker Analysis",
                                        placeholder: "What patterns do you see in obstacles? What systemic issues need addressing?",
                                        metric: "blockerCount"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        title: "🚀 Strategic Action Planning",
                        time: "10 mins",
                        questions: [
                            {
                                type: "actions",
                                title: "Monthly Strategic Actions"
                            }
                        ]
                    }
                ]
            },
            quarterly: {
                title: "Quarterly Strategic Review",
                duration: "45 minutes",
                sections: [
                    {
                        title: "🏆 Quarterly Business Impact",
                        time: "15 mins",
                        questions: [
                            {
                                type: "quantitative",
                                title: "Quarterly ROI & Business Value",
                                placeholder: "Total quantifiable impact this quarter (revenue, cost savings, efficiency, customer impact)",
                                metric: "outcomeImpact"
                            },
                            {
                                type: "single",
                                items: [
                                    {
                                        title: "🎯 Strategic Contributions & Leadership",
                                        placeholder: "What were your most significant strategic contributions? Include leadership examples, innovation, cross-team impact..."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        title: "🚀 Career & Strategic Development",
                        time: "20 mins",
                        questions: [
                            {
                                type: "grid",
                                items: [
                                    {
                                        title: "📈 Career Progression Assessment",
                                        placeholder: "How have you grown this quarter? What positions you for advancement?"
                                    },
                                    {
                                        title: "🎯 Next-Level Readiness",
                                        placeholder: "What capabilities demonstrate you're ready for increased responsibility?"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        title: "🎯 Strategic Planning & Roadmap",
                        time: "10 mins",
                        questions: [
                            {
                                type: "actions",
                                title: "Quarterly Strategic Actions"
                            }
                        ]
                    }
                ]
            },
            project: {
                title: "Project Debrief & Analysis",
                duration: "25 minutes",
                sections: [
                    {
                        title: "📊 Project ROI & Outcomes",
                        time: "10 mins",
                        questions: [
                            {
                                type: "quantitative",
                                title: "Project Business Value Created",
                                placeholder: "Quantifiable project impact (revenue, cost savings, efficiency gains, customer value)",
                                metric: "outcomeImpact"
                            },
                            {
                                type: "grid",
                                items: [
                                    {
                                        title: "🎯 Success Metrics Analysis",
                                        placeholder: "Did we hit our targets? Timeline, budget, quality, scope - include specific percentages..."
                                    },
                                    {
                                        title: "🏆 Unexpected Wins & Value",
                                        placeholder: "What additional value did we create beyond the original scope? Lessons, relationships, capabilities..."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        title: "🔍 Process Optimization Analysis",
                        time: "10 mins",
                        questions: [
                            {
                                type: "grid",
                                items: [
                                    {
                                        title: "✅ High-Impact Process Wins",
                                        placeholder: "Which processes, tools, or approaches drove exceptional results? What should we standardize?"
                                    },
                                    {
                                        title: "🔧 Critical Process Improvements",
                                        placeholder: "What caused inefficiencies or delays? What specific changes would prevent these issues?",
                                        metric: "blockerCount"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        title: "🚀 Implementation Actions",
                        time: "5 mins",
                        questions: [
                            {
                                type: "actions",
                                title: "Process Improvement Actions"
                            }
                        ]
                    }
                ]
            },
            development: {
                title: "Career Development Focus",
                duration: "40 minutes",
                sections: [
                    {
                        title: "💪 Skill Development Impact",
                        time: "12 mins",
                        questions: [
                            {
                                type: "quantitative",
                                title: "Development ROI Score",
                                placeholder: "Rate your skill development impact 1-100 based on business value created through new capabilities",
                                metric: "outcomeImpact"
                            },
                            {
                                type: "grid",
                                items: [
                                    {
                                        title: "🎯 Current Skill Strengths",
                                        placeholder: "What capabilities make you most valuable? Where do you excel and create the most impact?"
                                    },
                                    {
                                        title: "📈 Development Priorities",
                                        placeholder: "What skills would 2x your effectiveness? Focus on capabilities that drive business results..."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        title: "🚀 Career Advancement Strategy",
                        time: "20 mins",
                        questions: [
                            {
                                type: "three-column",
                                items: [
                                    {
                                        title: "Technical Excellence Goals",
                                        placeholder: "What technical skills position you for the next level?"
                                    },
                                    {
                                        title: "Leadership Development",
                                        placeholder: "What leadership capabilities do you need to build?"
                                    },
                                    {
                                        title: "Strategic Business Impact",
                                        placeholder: "How will you increase your strategic contribution?"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        title: "📚 Development Action Plan",
                        time: "8 mins",
                        questions: [
                            {
                                type: "actions",
                                title: "Career Development Actions"
                            }
                        ]
                    }
                ]
            },
            onboarding: {
                title: "New Hire Integration Check-in",
                duration: "20 minutes",
                sections: [
                    {
                        title: "🏠 Integration Success Metrics",
                        time: "8 mins",
                        questions: [
                            {
                                type: "quantitative",
                                title: "Integration Progress Score",
                                placeholder: "Rate your integration success 1-100 (comfort level, productivity, team connection)",
                                metric: "outcomeImpact"
                            },
                            {
                                type: "grid",
                                items: [
                                    {
                                        title: "👥 Team & Cultural Integration",
                                        placeholder: "How well are you connecting with the team? Any cultural alignment challenges or wins?"
                                    },
                                    {
                                        title: "🎯 Role Clarity & Early Wins",
                                        placeholder: "How clear are your responsibilities? What early achievements are you most proud of?"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        title: "🚧 Integration Blockers & Support",
                        time: "7 mins",
                        questions: [
                            {
                                type: "single",
                                items: [
                                    {
                                        title: "🛠️ Systems, Tools & Process Challenges",
                                        placeholder: "What's slowing down your productivity? Tools, access, training, or process confusion?",
                                        metric: "blockerCount"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        title: "🎯 Integration Support Actions",
                        time: "5 mins",
                        questions: [
                            {
                                type: "actions",
                                title: "Onboarding Support Actions"
                            }
                        ]
                    }
                ]
            }
        };
        
        // Initialize the application
        document.addEventListener('DOMContentLoaded', function() {
            // Set today's date
            const today = new Date().toISOString().split('T')[0];
            const dateInput = document.getElementById('meetingDate');
            if (dateInput) {
                dateInput.value = today;
            }
            
            // Initialize velocity tracking
            updateVelocityMeetingType();
            updateAnalytics();
        });
        
        // Tab switching functionality
        function switchTab(tabName) {
            document.querySelectorAll('.tab-content').forEach(content => {
                content.classList.remove('active');
            });
            
            document.querySelectorAll('.tab-button').forEach(button => {
                button.classList.remove('active');
            });
            
            document.getElementById(tabName).classList.add('active');
            event.target.classList.add('active');
            
            // Initialize charts when analytics tab is opened
            if (tabName === 'analytics') {
                setTimeout(() => {
                    drawTeamCharts();
                }, 100);
            }
        }
        
        // Template selection functionality
        function selectTemplate(templateType) {
            document.querySelectorAll('.template-card').forEach(card => {
                card.classList.remove('selected');
            });
            document.getElementById(`card-${templateType}`).classList.add('selected');
            
            document.getElementById('meetingType').value = templateType;
            updateTemplate(templateType);
            updateAnalytics();
        }
        
        // Meeting type change handler
        function handleMeetingTypeChange() {
            const selectedType = document.getElementById('meetingType').value;
            if (selectedType) {
                selectTemplate(selectedType);
            }
        }
        
        function updateTemplate(templateType = null) {
            const selectedType = templateType || document.getElementById('meetingType').value;
            if (!selectedType || !templates[selectedType]) {
                document.getElementById('dynamicContent').innerHTML = '<div class="insight-box"><h4>👆 Select a meeting type above to load the optimized template with auto-analytics</h4><p>Each template automatically tracks different KPIs and provides real-time performance insights as you complete the meeting.</p></div>';
                return;
            }
            
            const template = templates[selectedType];
            const contentDiv = document.getElementById('dynamicContent');
            
            let html = `
                <div class="insight-box">
                    <h4>📋 ${template.title} - Auto-Analytics Enabled</h4>
                    <p>This template automatically calculates performance metrics as you complete each section. Duration: ${template.duration}</p>
                </div>
            `;
            
            template.sections.forEach(section => {
                html += `
                    <div class="priority-section">
                        <div class="section-header">
                            <h3>${section.title}</h3>
                            <span class="time-indicator">${section.time}</span>
                        </div>
                        <div class="section-content">
                `;
                
                section.questions.forEach(questionGroup => {
                    if (questionGroup.type === 'quantitative') {
                        html += `
                            <div class="impact-card" style="margin-bottom: 20px;">
                                <h4>${questionGroup.title}</h4>
                                <input type="number" class="quantitative-input" placeholder="${questionGroup.placeholder}" 
                                       data-metric="${questionGroup.metric}" onchange="updateAnalytics()" oninput="updateAnalytics()">
                            </div>
                        `;
                    } else if (questionGroup.type === 'grid') {
                        html += '<div class="impact-grid">';
                        questionGroup.items.forEach(item => {
                            html += `
                                <div class="impact-card">
                                    <h4>${item.title}</h4>
                                    <textarea class="impact-input" placeholder="${item.placeholder}" 
                                              ${item.metric ? `data-metric="${item.metric}"` : ''} 
                                              onchange="updateAnalytics()" oninput="updateAnalytics()"></textarea>
                                </div>
                            `;
                        });
                        html += '</div>';
                    } else if (questionGroup.type === 'single') {
                        html += '<div class="impact-grid single-column">';
                        questionGroup.items.forEach(item => {
                            html += `
                                <div class="impact-card">
                                    <h4>${item.title}</h4>
                                    <textarea class="impact-input" placeholder="${item.placeholder}" 
                                              style="min-height: 120px;" 
                                              ${item.metric ? `data-metric="${item.metric}"` : ''} 
                                              onchange="updateAnalytics()" oninput="updateAnalytics()"></textarea>
                                </div>
                            `;
                        });
                        html += '</div>';
                    } else if (questionGroup.type === 'three-column') {
                        html += '<div class="impact-grid three-column">';
                        questionGroup.items.forEach(item => {
                            html += `
                                <div class="impact-card">
                                    <h4>${item.title}</h4>
                                    <textarea class="impact-input" placeholder="${item.placeholder}" 
                                              onchange="updateAnalytics()" oninput="updateAnalytics()"></textarea>
                                </div>
                            `;
                        });
                        html += '</div>';
                    } else if (questionGroup.type === 'actions') {
                        html += generateActionSection(questionGroup.title);
                    }
                });
                
                html += '</div></div>';
            });
            
            contentDiv.innerHTML = html;
        }
        
        function generateActionSection(title) {
            return `
                <div class="action-grid">
                    <div class="action-column">
                        <h4>📋 ${title}</h4>
                        <div id="actionItems">
                            ${actionItems.map((item, index) => `
                                <div class="action-item">
                                    <input type="checkbox" class="action-checkbox" ${item.completed ? 'checked' : ''} 
                                           onchange="toggleAction(${index})">
                                    <input type="text" class="action-text" value="${item.text}" 
                                           onchange="updateActionText(${index}, this.value)">
                                    <input type="date" class="action-date" value="${item.date}" 
                                           onchange="updateActionDate(${index}, this.value)">
                                    <button class="delete-btn" onclick="deleteAction(${index})">×</button>
                                </div>
                            `).join('')}
                        </div>
                        <button class="add-action-btn" onclick="addAction()">+ Add Action Item</button>
                    </div>
                    <div class="action-column">
                        <h4>📊 Action Analytics</h4>
                        <div style="background: white; padding: 15px; border-radius: 8px; margin-bottom: 15px;">
                            <div style="display: flex; justify-content: space-between; margin-bottom: 10px;">
                                <span>Completion Rate:</span>
                                <strong id="completionRateDisplay">${Math.round(currentMetrics.actionCompletionRate)}%</strong>
                            </div>
                            <div style="display: flex; justify-content: space-between; margin-bottom: 10px;">
                                <span>Total Actions:</span>
                                <strong>${actionItems.length}</strong>
                            </div>
                            <div style="display: flex; justify-content: space-between;">
                                <span>Completed:</span>
                                <strong>${actionItems.filter(item => item.completed).length}</strong>
                            </div>
                        </div>
                        <div style="background: #e8f5e8; padding: 15px; border-radius: 8px; border-left: 4px solid #2ecc71;">
                            <h5 style="color: #155724; margin-bottom: 10px;">💡 Action Insights</h5>
                            <p style="font-size: 13px; color: #155724; line-height: 1.5;">
                                ${getActionInsight()}
                            </p>
                        </div>
                    </div>
                </div>
            `;
        }
        
        function addAction() {
            const today = new Date().toISOString().split('T')[0];
            actionItems.push({
                text: 'New action item...',
                date: today,
                completed: false
            });
            updateTemplate();
            updateAnalytics();
        }
        
        function deleteAction(index) {
            actionItems.splice(index, 1);
            updateTemplate();
            updateAnalytics();
        }
        
        function toggleAction(index) {
            actionItems[index].completed = !actionItems[index].completed;
            updateAnalytics();
        }
        
        function updateActionText(index, text) {
            actionItems[index].text = text;
            updateAnalytics();
        }
        
        function updateActionDate(index, date) {
            actionItems[index].date = date;
            updateAnalytics();
        }
        
        function getActionInsight() {
            const totalActions = actionItems.length;
            const completedActions = actionItems.filter(item => item.completed).length;
            const completionRate = totalActions > 0 ? (completedActions / totalActions) * 100 : 0;
            
            if (totalActions === 0) {
                return "Add action items to track completion rates and generate insights.";
            } else if (completionRate >= 85) {
                return "Excellent execution! Your high completion rate indicates strong follow-through and accountability.";
            } else if (completionRate >= 70) {
                return "Good progress on action items. Consider reviewing incomplete items for potential blockers.";
            } else if (completionRate >= 50) {
                return "Action completion needs attention. Review capacity and prioritization strategies.";
            } else {
                return "Low completion rate detected. Consider reducing action volume or investigating systemic issues.";
            }
        }
        
        function updateVelocityMeetingType() {
            const selectedType = document.getElementById('velocityMeetingType').value;
            const customInput = document.getElementById('customMeetingInput');
            const trackingLabel = document.getElementById('trackingTypeLabel');
            const meetingTypeDisplay = document.getElementById('meetingTypeDisplay');
            const averageDuration = document.getElementById('averageDuration');
            
            if (selectedType === 'custom') {
                customInput.style.display = 'block';
                trackingLabel.textContent = 'Custom Meeting Type';
                meetingTypeDisplay.textContent = 'Custom';
                averageDuration.textContent = '25m';
            } else {
                customInput.style.display = 'none';
                
                const meetingTypeNames = {
                    'all': 'All Meeting Types',
                    'weekly': 'Weekly Pulse Meetings',
                    'monthly': 'Monthly Deep-Dive Sessions',
                    'quarterly': 'Quarterly Strategic Reviews',
                    'project': 'Project Debrief Meetings',
                    'development': 'Career Development Sessions',
                    'onboarding': 'New Hire Integration Meetings'
                };
                
                const durations = {
                    'all': '22m',
                    'weekly': '15m',
                    'monthly': '30m',
                    'quarterly': '45m',
                    'project': '25m',
                    'development': '40m',
                    'onboarding': '20m'
                };
                
                const displayNames = {
                    'all': 'All Types',
                    'weekly': 'Weekly',
                    'monthly': 'Monthly',
                    'quarterly': 'Quarterly',
                    'project': 'Project',
                    'development': 'Career',
                    'onboarding': 'Onboarding'
                };
                
                trackingLabel.textContent = meetingTypeNames[selectedType] || 'All Meeting Types';
                meetingTypeDisplay.textContent = displayNames[selectedType] || 'All Types';
                averageDuration.textContent = durations[selectedType] || '22m';
            }
            
            // Update velocity metrics based on meeting type
            updateVelocityMetrics(selectedType);
        }
        
        function updateVelocityMetrics(meetingType) {
            // Simulate different metrics for different meeting types
            const mockData = {
                'all': { planned: 4, actual: 3, trend: '+12%' },
                'weekly': { planned: 1, actual: 1, trend: '+5%' },
                'monthly': { planned: 1, actual: 1, trend: '+8%' },
                'quarterly': { planned: 1, actual: 0, trend: '-25%' },
                'project': { planned: 2, actual: 1, trend: '+15%' },
                'development': { planned: 1, actual: 1, trend: '+10%' },
                'onboarding': { planned: 1, actual: 1, trend: '+20%' }
            };
            
            const data = mockData[meetingType] || mockData['all'];
            
            document.getElementById('plannedInput').value = data.planned;
            document.getElementById('actualInput').value = data.actual;
            document.getElementById('weeklyTrend').textContent = `↗ ${data.trend}`;
            
            updateVelocity();
        }
            const selectedType = document.getElementById('velocityMeetingType').value;
            const customInput = document.getElementById('customMeetingInput');
            const trackingLabel = document.getElementById('trackingTypeLabel');
            const meetingTypeDisplay = document.getElementById('meetingTypeDisplay');
            const averageDuration = document.getElementById('averageDuration');
            
            if (selectedType === 'custom') {
                customInput.style.display = 'block';
                trackingLabel.textContent = 'Custom Meeting Type';
                meetingTypeDisplay.textContent = 'Custom';
                averageDuration.textContent = '25m';
            } else {
                customInput.style.display = 'none';
                
                const meetingTypeNames = {
                    'all': 'All Meeting Types',
                    'weekly': 'Weekly Pulse Meetings',
                    'monthly': 'Monthly Deep-Dive Sessions',
                    'quarterly': 'Quarterly Strategic Reviews',
                    'project': 'Project Debrief Meetings',
                    'development': 'Career Development Sessions',
                    'onboarding': 'New Hire Integration Meetings'
                };
                
                const durations = {
                    'all': '22m',
                    'weekly': '15m',
                    'monthly': '30m',
                    'quarterly': '45m',
                    'project': '25m',
                    'development': '40m',
                    'onboarding': '20m'
                };
                
                const displayNames = {
                    'all': 'All Types',
                    'weekly': 'Weekly',
                    'monthly': 'Monthly',
                    'quarterly': 'Quarterly',
                    'project': 'Project',
                    'development': 'Career',
                    'onboarding': 'Onboarding'
                };
                
                trackingLabel.textContent = meetingTypeNames[selectedType] || 'All Meeting Types';
                meetingTypeDisplay.textContent = displayNames[selectedType] || 'All Types';
                averageDuration.textContent = durations[selectedType] || '22m';
            }
            
            // Update velocity metrics based on meeting type
            updateVelocityMetrics(selectedType);
        }
        
        function updateVelocityMetrics(meetingType) {
            // Simulate different metrics for different meeting types
            const mockData = {
                'all': { planned: 4, actual: 3, trend: '+12%' },
                'weekly': { planned: 1, actual: 1, trend: '+5%' },
                'monthly': { planned: 1, actual: 1, trend: '+8%' },
                'quarterly': { planned: 1, actual: 0, trend: '-25%' },
                'project': { planned: 2, actual: 1, trend: '+15%' },
                'development': { planned: 1, actual: 1, trend: '+10%' },
                'onboarding': { planned: 1, actual: 1, trend: '+20%' }
            };
            
            const data = mockData[meetingType] || mockData['all'];
            
            document.getElementById('plannedInput').value = data.planned;
            document.getElementById('actualInput').value = data.actual;
            document.getElementById('weeklyTrend').textContent = `↗ ${data.trend}`;
            
            updateVelocity();
        }
            const planned = parseInt(document.getElementById('plannedInput').value) || 0;
            const actual = parseInt(document.getElementById('actualInput').value) || 0;
            const rate = planned > 0 ? Math.round((actual / planned) * 100) : 0;
            
            document.getElementById('plannedMeetings').textContent = planned;
            document.getElementById('actualMeetings').textContent = actual;
            document.getElementById('velocityRate').textContent = rate + '%';
            
            currentMetrics.entryVelocity = rate;
            document.getElementById('entryVelocity').textContent = rate + '%';
            
            // Update trend indicator
            let trendText = '';
            let trendClass = '';
            if (rate >= 90) {
                trendText = '↗ Excellent';
                trendClass = 'trend-up';
            } else if (rate >= 75) {
                trendText = '→ Good';
                trendClass = 'trend-stable';
            } else {
                trendText = '↓ Needs Focus';
                trendClass = 'trend-down';
            }
            
            const velocityTrendEl = document.getElementById('velocityTrend');
            if (velocityTrendEl) {
                velocityTrendEl.textContent = trendText;
                velocityTrendEl.className = 'metric-trend ' + trendClass;
            }
        }
        
        function updateAnalytics() {
            // Calculate outcome impact
            const quantInputs = document.querySelectorAll('.quantitative-input');
            let totalImpact = 0;
            quantInputs.forEach(input => {
                const value = parseFloat(input.value) || 0;
                totalImpact += value;
            });
            currentMetrics.outcomeImpact = totalImpact;
            document.getElementById('outcomeImpact').textContent = Math.round(totalImpact);
            
            // Calculate blocker count
            const blockerInputs = document.querySelectorAll('[data-metric="blockerCount"]');
            let blockerCount = 0;
            blockerInputs.forEach(input => {
                if (input.value && input.value.trim().length > 10) {
                    blockerCount++;
                }
            });
            currentMetrics.blockerCount = blockerCount;
            document.getElementById('blockerCount').textContent = blockerCount;
            
            // Calculate action completion rate
            const totalActions = actionItems.length;
            const completedActions = actionItems.filter(item => item.completed).length;
            const actionRate = totalActions > 0 ? Math.round((completedActions / totalActions) * 100) : 0;
            currentMetrics.actionCompletionRate = actionRate;
            document.getElementById('actionCompletionRate').textContent = actionRate + '%';
            
            // Calculate engagement score
            const allInputs = document.querySelectorAll('.impact-input');
            let totalChars = 0;
            let filledInputs = 0;
            allInputs.forEach(input => {
                if (input.value && input.value.trim().length > 0) {
                    totalChars += input.value.trim().length;
                    filledInputs++;
                }
            });
            const avgChars = filledInputs > 0 ? totalChars / filledInputs : 0;
            const engagementScore = Math.min(100, Math.round(avgChars / 2));
            currentMetrics.engagementScore = engagementScore;
            document.getElementById('engagementScore').textContent = engagementScore;
            
            // Calculate business alignment (strategic vs tactical keywords)
            const strategicKeywords = ['strategy', 'strategic', 'vision', 'growth', 'revenue', 'business', 'market', 'competitive', 'innovation', 'leadership'];
            let strategicMatches = 0;
            let totalWords = 0;
            allInputs.forEach(input => {
                if (input.value) {
                    const words = input.value.toLowerCase().split(/\s+/);
                    totalWords += words.length;
                    words.forEach(word => {
                        if (strategicKeywords.some(keyword => word.includes(keyword))) {
                            strategicMatches++;
                        }
                    });
                }
            });
            const alignmentScore = totalWords > 0 ? Math.round((strategicMatches / totalWords) * 100) : 0;
            currentMetrics.businessAlignment = alignmentScore;
            document.getElementById('businessAlignment').textContent = alignmentScore + '%';
            
            // Update trend indicators
            updateTrends();
        }
        
        function updateTrends() {
            // Update outcome impact trend
            const impact = currentMetrics.outcomeImpact;
            let impactTrend = '';
            let impactClass = '';
            if (impact >= 80) {
                impactTrend = '↗ Excellent';
                impactClass = 'trend-up';
            } else if (impact >= 50) {
                impactTrend = '→ Good';
                impactClass = 'trend-stable';
            } else if (impact > 0) {
                impactTrend = '↓ Below Target';
                impactClass = 'trend-down';
            } else {
                impactTrend = 'Enter quantitative results';
                impactClass = 'trend-stable';
            }
            
            const impactTrendEl = document.getElementById('outcomeImpactTrend');
            if (impactTrendEl) {
                impactTrendEl.textContent = impactTrend;
                impactTrendEl.className = 'metric-trend ' + impactClass;
            }
            
            // Update blocker trend
            const blockers = currentMetrics.blockerCount;
            let blockerTrend = '';
            let blockerClass = '';
            if (blockers === 0) {
                blockerTrend = '✅ No Blockers';
                blockerClass = 'trend-up';
            } else if (blockers <= 2) {
                blockerTrend = '→ Manageable';
                blockerClass = 'trend-stable';
            } else {
                blockerTrend = '⚠️ High Count';
                blockerClass = 'trend-down';
            }
            
            const blockerTrendEl = document.getElementById('blockerTrend');
            if (blockerTrendEl) {
                blockerTrendEl.textContent = blockerTrend;
                blockerTrendEl.className = 'metric-trend ' + blockerClass;
            }
            
            // Update action trend
            const actionRate = currentMetrics.actionCompletionRate;
            let actionTrend = '';
            let actionClass = '';
            if (actionRate >= 85) {
                actionTrend = '↗ Excellent';
                actionClass = 'trend-up';
            } else if (actionRate >= 70) {
                actionTrend = '→ Good';
                actionClass = 'trend-stable';
            } else if (actionRate > 0) {
                actionTrend = '↓ Needs Focus';
                actionClass = 'trend-down';
            } else {
                actionTrend = 'Check off completed actions';
                actionClass = 'trend-stable';
            }
            
            const actionTrendEl = document.getElementById('actionTrend');
            if (actionTrendEl) {
                actionTrendEl.textContent = actionTrend;
                actionTrendEl.className = 'metric-trend ' + actionClass;
            }
            
            // Update engagement trend
            const engagement = currentMetrics.engagementScore;
            let engagementTrend = '';
            let engagementClass = '';
            if (engagement >= 80) {
                engagementTrend = '↗ High Quality';
                engagementClass = 'trend-up';
            } else if (engagement >= 50) {
                engagementTrend = '→ Moderate';
                engagementClass = 'trend-stable';
            } else if (engagement > 0) {
                engagementTrend = '↓ More Detail Needed';
                engagementClass = 'trend-down';
            } else {
                engagementTrend = 'Based on input depth';
                engagementClass = 'trend-stable';
            }
            
            const engagementTrendEl = document.getElementById('engagementTrend');
            if (engagementTrendEl) {
                engagementTrendEl.textContent = engagementTrend;
                engagementTrendEl.className = 'metric-trend ' + engagementClass;
            }
            
            // Update alignment trend
            const alignment = currentMetrics.businessAlignment;
            let alignmentTrend = '';
            let alignmentClass = '';
            if (alignment >= 70) {
                alignmentTrend = '↗ Strategic Focus';
                alignmentClass = 'trend-up';
            } else if (alignment >= 40) {
                alignmentTrend = '→ Balanced';
                alignmentClass = 'trend-stable';
            } else if (alignment > 0) {
                alignmentTrend = '↓ More Strategy Needed';
                alignmentClass = 'trend-down';
            } else {
                alignmentTrend = 'Strategic contribution';
                alignmentClass = 'trend-stable';
            }
            
            const alignmentTrendEl = document.getElementById('alignmentTrend');
            if (alignmentTrendEl) {
                alignmentTrendEl.textContent = alignmentTrend;
                alignmentTrendEl.className = 'metric-trend ' + alignmentClass;
            }
        }
        
        function drawTeamCharts() {
            // Destroy existing charts
            Object.values(chartInstances).forEach(chart => {
                if (chart) chart.destroy();
            });
            
            // Team Performance Trends Chart
            const trendCtx = document.getElementById('teamTrendChart');
            if (trendCtx) {
                chartInstances.trend = new Chart(trendCtx, {
                    type: 'line',
                    data: {
                        labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4', 'Week 5', 'Week 6'],
                        datasets: [{
                            label: 'Team Average Performance',
                            data: [72, 75, 79, 83, 86, 89],
                            borderColor: '#3498db',
                            backgroundColor: 'rgba(52, 152, 219, 0.1)',
                            tension: 0.4,
                            fill: true
                        }, {
                            label: 'Industry Benchmark',
                            data: [68, 68, 69, 70, 71, 72],
                            borderColor: '#e74c3c',
                            backgroundColor: 'rgba(231, 76, 60, 0.1)',
                            tension: 0.4,
                            borderDash: [5, 5]
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'top'
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                max: 100
                            }
                        }
                    }
                });
            }
            
            // Blocker Analysis Chart
            const blockerCtx = document.getElementById('blockerChart');
            if (blockerCtx) {
                chartInstances.blocker = new Chart(blockerCtx, {
                    type: 'bar',
                    data: {
                        labels: ['Marcus R.', 'Lisa C.', 'James W.', 'Sarah P.'],
                        datasets: [{
                            label: 'Active Blockers',
                            data: [2, 3, 1, 4],
                            backgroundColor: ['#2ecc71', '#f39c12', '#2ecc71', '#e74c3c'],
                            borderColor: ['#27ae60', '#d68910', '#27ae60', '#c0392b'],
                            borderWidth: 2
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                max: 6
                            }
                        }
                    }
                });
            }
            
            // Action Completion Chart
            const completionCtx = document.getElementById('completionChart');
            if (completionCtx) {
                chartInstances.completion = new Chart(completionCtx, {
                    type: 'line',
                    data: {
                        labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],
                        datasets: [{
                            label: 'Marcus Rodriguez',
                            data: [85, 88, 89, 89],
                            borderColor: '#3498db',
                            backgroundColor: 'rgba(52, 152, 219, 0.1)'
                        }, {
                            label: 'Lisa Chen',
                            data: [90, 92, 93, 94],
                            borderColor: '#2ecc71',
                            backgroundColor: 'rgba(46, 204, 113, 0.1)'
                        }, {
                            label: 'James Wilson',
                            data: [82, 84, 85, 86],
                            borderColor: '#f39c12',
                            backgroundColor: 'rgba(243, 156, 18, 0.1)'
                        }, {
                            label: 'Sarah Park',
                            data: [75, 76, 77, 78],
                            borderColor: '#e74c3c',
                            backgroundColor: 'rgba(231, 76, 60, 0.1)'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'top'
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                max: 100
                            }
                        }
                    }
                });
            }
            
            // Entry Velocity Chart
            const velocityCtx = document.getElementById('velocityChart');
            if (velocityCtx) {
                chartInstances.velocity = new Chart(velocityCtx, {
                    type: 'doughnut',
                    data: {
                        labels: ['Marcus R.', 'Lisa C.', 'James W.', 'Sarah P.'],
                        datasets: [{
                            data: [95, 100, 80, 75],
                            backgroundColor: ['#3498db', '#2ecc71', '#f39c12', '#e74c3c'],
                            borderWidth: 3,
                            borderColor: '#fff'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'right'
                            }
                        }
                    }
                });
            }
        }
        
        // Download functions
        function downloadExcel() {
            alert('📊 TalentMosaic Swift Excel Pack would be downloaded with:\n\n• Pre-built templates with formulas\n• Historical data tracking sheets\n• Automated dashboard pivots\n• Team comparison tools\n• ROI calculation worksheets');
        }
        
        function downloadPDF() {
            alert('📄 TalentMosaic Swift Implementation Guide would include:\n\n• Setup instructions for teams\n• Best practices for effective conversations\n• Metric interpretation guidelines\n• Troubleshooting common issues\n• Advanced analytics techniques');
        }
        
        function downloadCSV() {
            alert('📈 TalentMosaic Swift Performance Data would contain:\n\n• Individual performance metrics\n• Weekly trend data\n• Blocker analysis results\n• Action completion rates\n• Entry velocity tracking\n• Benchmarking data');
        }
    </script>
</body>
</html>
